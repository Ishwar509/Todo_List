(()=>{"use strict";const t=class{constructor(t){this.aside=t,this.closeAsideBtn=document.querySelector(".closeAside"),this.asideContainer=document.querySelector(".asideContainer"),this.deleteTaskBtn=document.querySelector(".deleteTask"),this.editTaskBtn=document.querySelector(".editTask"),this.editChecklistBtn=document.querySelector(".editChecklist")}loadUI(){this.closeAsideBtn.addEventListener("click",(()=>{this.closeAside()})),this.deleteTaskBtn.addEventListener("click",(()=>{this.closeAside(),this.aside.mediator.notify(this.aside,"deleteTask",this.aside.currTask)})),this.editTaskBtn.addEventListener("click",(()=>{this.aside.mediator.notify(this.aside,"editTask",this.aside.currTask)})),this.editChecklistBtn.addEventListener("click",(()=>{this.aside.mediator.notify(this.aside,"editChecklist",this.aside.currTask.checklist)}))}closeAside(){this.asideContainer.style.width="0px",this.aside.mediator.notify(this.aside,"asideClosed",null)}openAside(){this.aside.mediator.notify(this.aside,"asideOpened",null),this.asideContainer.style.width="300px"}},e=class{constructor(){this.taskTitleElement=document.querySelector(".taskTitle"),this.checklistElement=document.querySelector(".checklist"),this.dueDateElement=document.querySelector(".duedate"),this.noteElement=document.querySelector(".note"),this.createDateElement=document.querySelector(".createDate"),this.priorityElement=document.querySelector(".priority")}renderTaskInfo(t){this.taskTitleElement.textContent=t.title,this.dueDateElement.textContent=`Due-Date: ${t.dueDate}`,this.noteElement.textContent=t.note,this.priorityElement.textContent=`Priority: ${t.priority}`,this.createDateElement.textContent=`Created on: ${t.createDate}`,this.checklistElement.innerHTML="";for(let e of t.checklist){let t=document.createElement("li");t.textContent=e,this.checklistElement.appendChild(t)}}},i=class{constructor(){this.defaultList=document.querySelector(".projects.default"),this.userList=document.querySelector(".projects.user")}createElement(t,e=[]){let i=document.createElement(t);return e.forEach((t=>{i.classList.add(t)})),i}createTitleElement(t){let e=this.createElement("p",["title"]);return e.textContent=t,e}createTaskCounter(t){let e=this.createElement("p",["taskCount"]);return e.textContent=t,e}createProjectItem(t,e){let i=this.createElement("li");return i.dataset.uid=t,i.appendChild(this.createTitleElement(e.title)),e.todoList.length>0&&i.appendChild(this.createTaskCounter(e.todoList.length)),i}renderProjects(t){this.defaultList.innerHTML="",this.userList.innerHTML="";for(let[e,i]of t){let t=this.createProjectItem(e,i);"default"===i.type?this.defaultList.appendChild(t):this.userList.appendChild(t)}}},s=class{constructor(t){this.sidenav=t,this.sidenavContainer=document.querySelector(".sidenavContainer"),this.addProjectBtn=document.querySelector("#addProject"),this.closeSidenavBtn=document.querySelector("#closeSidenav"),this.openSidenavBtn=document.querySelector("#openSidenav")}loadUI(){this.addProjectBtn.addEventListener("click",(t=>{this.sidenav.mediator.notify(this.sidenav,"newProject",null)})),this.closeSidenavBtn.addEventListener("click",(()=>{this.closeSideNav()})),this.openSidenavBtn.addEventListener("click",(()=>{this.openSideNav()})),window.addEventListener("resize",(()=>{window.innerWidth>=800&&this.sidenavContainer.removeAttribute("style")})),this.sidenavContainer.addEventListener("click",(t=>{let e=t.target.closest("li")?.dataset.uid;e&&(this.sidenav.mediator.notify(this.sidenav,"projectSelected",this.sidenav.projectMap.get(e)),this.closeSideNav())}))}openSideNav(){this.sidenavContainer.style.width="300px",this.sidenav.mediator.notify(this.sidenav,"sidenavOpened",null)}closeSideNav(){this.sidenavContainer.removeAttribute("style"),this.sidenav.mediator.notify(this.sidenav,"sidenavClosed",null)}},o=class{constructor(t){this.main=t,this.taskList=document.querySelector(".tasklist"),this.addTaskBtn=document.querySelector(".addTask"),this.deleteProjectBtn=document.querySelector(".deleteProject"),this.editProjectBtn=document.querySelector(".editProject")}loadUI(){this.addTaskBtn.addEventListener("click",(()=>{this.main.mediator.notify(this.main,"newTask",null)})),this.deleteProjectBtn.addEventListener("click",(()=>{this.main.mediator.notify(this.main,"deleteProject",this.main.currProject)})),this.editProjectBtn.addEventListener("click",(()=>{this.main.mediator.notify(this.main,"editProject",this.main.currProject)})),this.taskList.addEventListener("click",(t=>{if(t.target.classList.contains("deleteTask_main")){const e=t.target.closest(".taskItem");return void this.main.mediator.notify(this.main,"deleteTask",this.main.taskMap.get(e.dataset.uid))}if(t.target.classList.contains("checkbox")){const e=t.target.closest(".taskItem"),i=this.main.taskMap.get(e.dataset.uid);return i.changeStatus(),void(e.dataset.isComplete=i.isComplete)}let e=t.target.closest(".taskItem")?.dataset.uid;e&&this.main.mediator.notify(this.main,"taskSelected",this.main.taskMap.get(e))}))}},r=class{constructor(){this.tasklistContainer=document.querySelector(".tasklist"),this.titleElement=document.querySelector(".projectTitle"),this.btnGroup=document.querySelector(".btnGroup")}createTaskItem(t,e){let i=document.createElement("li");i.classList.add("taskItem"),i.dataset.uid=t,i.dataset.priority=e.priority,i.dataset.isComplete=e.isComplete;const s=document.createElement("input");s.setAttribute("type","checkbox"),s.setAttribute("id",t),s.setAttribute("class","checkbox"),e.isComplete&&s.setAttribute("checked","");const o=document.createElement("div");o.setAttribute("class","title_main"),o.textContent=e.title;const r=document.createElement("div");r.setAttribute("class","duedate_main"),r.textContent=`Due-Date : ${e.dueDate}`;const a=document.createElement("button");return a.setAttribute("class","deleteTask_main"),a.innerHTML="&times;",i.append(s,o,r,a),i}createAlertBox(){let t=document.createElement("div");return t.classList.add("emptyList"),t.textContent="Project is Empty",t}renderTasks(t,e){if(this.btnVisibility(t),this.tasklistContainer.innerHTML="",this.titleElement.textContent=t.title,0!=t.todoList.length)for(let[t,i]of e){let e=this.createTaskItem(t,i);this.tasklistContainer.appendChild(e)}else this.tasklistContainer.appendChild(this.createAlertBox())}btnVisibility(t){"default"==t.type?this.btnGroup.style.display="none":this.btnGroup.style.display="block"}};class a{static loadProjectData(t){null!=t&&(document.querySelector("#projectTitleInput").value=t.title)}static loadTodoData(t){null!=t&&(document.querySelector("#taskTitleInput").value=t.title,document.querySelector("#duedateInput").value=t.dueDate,document.querySelector("#priorityInput").value=t.priority,document.querySelector("#noteInput").value=t.note)}static getProjectData(){return{title:document.querySelector("#projectTitleInput").value}}static getTodoData(){return{title:document.querySelector("#taskTitleInput").value,dueDate:document.querySelector("#duedateInput").value,priority:document.querySelector("#priorityInput").value,note:document.querySelector("#noteInput").value}}static getChecklistData(){const t=[];return Array.from(document.querySelector(".itemList").children).forEach((e=>{const i=e.querySelector("div");t.push(i.textContent)})),console.log(t),{checklist:t}}static createList(t){const e=document.querySelector(".itemList");e.innerHTML="",t.forEach((t=>{const i=this.createItem(t);e.appendChild(i)}))}static createItem(t){const e=document.createElement("li"),i=document.createElement("div"),s=document.createElement("button");return s.setAttribute("type","button"),s.classList.add("deleteItem"),i.textContent=t,s.textContent="X",e.appendChild(i),e.appendChild(s),e}static loadChecklistData(t){a.createList(t)}}const n=a;class c{constructor(t,e,i){this.submitAction=null,this.formHandler=t,this.getData=e,this.loadData=i}showForm(t){this.submitAction=t?"edit":"new",this.loadData(t),this.modal.showModal()}handleFormSubmission(){const t=this.getMessage(),e=this.getData();this.formElement.reset(),this.formHandler.mediator.notify(this.formHandler,t,e)}setupUI(){this.formElement.addEventListener("submit",(()=>{this.handleFormSubmission()})),this.closeBtn.addEventListener("click",(()=>{this.modal.close()}))}}class d extends c{constructor(t,e,i){super(t,e,i),this.modal=document.querySelector(".projectModal"),this.formElement=document.querySelector(".projectModal form"),this.closeBtn=document.querySelector(".projectModal .close")}getMessage(){return"new"==this.submitAction?"addProject":"modifyProject"}}class l extends c{constructor(t,e,i){super(t,e,i),this.modal=document.querySelector(".taskModal"),this.formElement=document.querySelector(".taskModal form"),this.closeBtn=document.querySelector(".taskModal .close")}getMessage(){return"new"==this.submitAction?"addTask":"modifyTask"}}class h extends c{constructor(t,e,i){super(t,e,i),this.modal=document.querySelector(".checklistModal"),this.formElement=document.querySelector(".checklistModal form"),this.closeBtn=document.querySelector(".checklistModal .close"),this.itemList=document.querySelector(".itemList"),this.addStepBtn=document.querySelector(".checklistModal .addStep"),this.init()}getMessage(){return"modifyChecklist"}init(){this.itemList.addEventListener("click",(t=>{t.target.classList.contains("deleteItem")&&this.itemList.removeChild(t.target.closest("li"))})),this.addStepBtn.addEventListener("click",(()=>{const t=document.querySelector("#checklistInput").value;if(""==t.trim())return;const e=n.createItem(t);this.itemList.appendChild(e),document.querySelector("#checklistInput").value=""}))}}const u=class{constructor({title:t="",todoList:e=[],type:i="user"}={}){this.title=t,this.todoList=e,this.type=i}addTodo(t){this.todoList.push(t)}removeTodo(t){this.todoList=this.todoList.filter((e=>e!==t))}},m=class{constructor({title:t="",dueDate:e="",priority:i="",checklist:s=[],isComplete:o=!1,note:r="",createDate:a=(new Date).toDateString()}={}){this.title=t,this.dueDate=e,this.priority=i,this.checklist=s,this.isComplete=o,this.note=r,this.createDate=a}addStep(t){this.checklist.push(t)}changeStatus(){this.isComplete=!this.isComplete}changePriority(t){this.priority=t}changeDueDate(t){this.dueDate=t}},p=new class{constructor(){this.mediator=null,this.currProjectList=null,this.currProject=null,this.currTask=null}getCurrProjectList(){return this.currProjectList}getCurrProject(){return this.currProject}getCurrTask(){return this.currTask}setProjectList(t){this.currProjectList=t}setProject(t){this.currProject=t}setTask(t){this.currTasklist=t}setMediator(t){this.mediator=t}receiveNotification(t,e){"projectsLoaded"==t?this.currProjectList=e:"projectSelected"==t?this.currProject=e:"taskSelected"==t&&(this.currTask=e)}},k=p;let y=[{title:"Complete Project Proposal",dueDate:"2023-12-31",priority:"High",checklist:["Research","Outline","Draft"],isComplete:!1,note:"Important project for the upcoming deadline."},{title:"Buy Groceries",dueDate:"2023-12-25",priority:"Medium",checklist:["Milk","Bread","Eggs","Fruits"],isComplete:!1,note:"Don't forget to buy fresh vegetables!"},{title:"Gym Workout",dueDate:"2023-12-28",priority:"Low",checklist:["Cardio","Weights","Stretching"],isComplete:!1,note:"Focus on leg exercises today."},{title:"Book Flight Tickets",dueDate:"2024-01-15",priority:"High",checklist:["Check passport","Choose seats","Confirm dates"],isComplete:!1,note:"Check for any travel restrictions due to COVID-19."}].map((t=>new m(t))),f=[{title:"Schedule dentist appointment",dueDate:"2024-01-15",priority:"Medium",checklist:["Call dentist","Choose a date","Confirm appointment"],isComplete:!1,note:"Remember to ask about teeth whitening options.",createDate:"2023-12-22"},{title:"Submit project proposal",dueDate:"2023-12-28",priority:"High",checklist:["Finalize content","Create presentation","Practice pitch"],isComplete:!1,note:"Review budget and timeline before submission.",createDate:"2023-12-22"},{title:"Plan weekend getaway",dueDate:"2024-01-05",priority:"Medium",checklist:["Choose destination","Book accommodations","Plan activities"],isComplete:!1,note:"Research local attractions and restaurants.",createDate:"2023-12-22"},{title:"Prepare for job interview",dueDate:"2024-01-10",priority:"High",checklist:["Research company","Practice answers to common questions","Choose professional outfit"],isComplete:!1,note:"Print extra copies of resume and references.",createDate:"2023-12-22"},{title:"Organize home office",dueDate:"2023-12-29",priority:"Medium",checklist:["Sort through papers","File documents","Declutter workspace"],isComplete:!1,note:"Consider donating or recycling unused items.",createDate:"2023-12-22"},{title:"Book car maintenance",dueDate:"2024-01-20",priority:"Medium",checklist:["Call mechanic","Schedule appointment","Request estimate"],isComplete:!1,note:"Ask about any upcoming service needs.",createDate:"2023-12-22"},{title:"Start reading new book",dueDate:"2024-01-30",priority:"Low",checklist:["Choose book","Set reading schedule","Join book club (optional)"],isComplete:!1,note:"Consider starting a reading journal to track progress.",createDate:"2023-12-22"}].map((t=>new m(t))),C=[{title:"Host Epic Dance Party for Cats",dueDate:"2023-12-20",priority:"High",checklist:["Stock up on catnip","Hire laser pointer DJ","Supply fluffy disco balls"],isComplete:!1,note:"Ensure guests have mastered the art of hairball removal."},{title:"Write Limerick About Your Houseplants",dueDate:"2023-12-28",priority:"High",checklist:["Investigate plant puns","Master botanical rhythm"],isComplete:!1,note:'Don\'t forget to rhyme "photosynthesis" with "kisses".'},{title:"Challenge Squirrel to Thumb War",dueDate:"2024-01-10",priority:"Medium",checklist:["Locate willing squirrel","Practice thumb dexterity"],isComplete:!1,note:"Beware of potential nut-related distractions."},{title:"Choreograph Sock Puppet Opera",dueDate:"2023-12-29",priority:"Low",checklist:["Cast mismatched socks","Compose dramatic sock-et","Construct miniature stage"],isComplete:!1,note:"Prepare for thunderous applause (from your feet)."},{title:"Research Vacation Spots for Introverted Llamas",dueDate:"2024-01-05",priority:"Medium",checklist:["Find llama-friendly resorts","Book private pastures","Pack extra spittoons"],isComplete:!1,note:"Avoid destinations known for excessive drama."},{title:"Teach Goldfish to Sing Opera",dueDate:"2023-12-31",priority:"High",checklist:["Find musically inclined goldfish","Compose aquatic arias","Construct tiny underwater stage"],isComplete:!1,note:"Bubbles count as applause."},{title:"Prepare Stand-Up Comedy Routine for Job Interview",dueDate:"2024-01-03",priority:"High",checklist:["Write jokes about office culture","Practice impressions of CEO","Prepare for awkward silences"],isComplete:!1,note:"Don't forget to roast the competition (metaphorically)."},{title:"Teach Car to Do Dog Tricks",dueDate:"2024-01-15",priority:"Medium",checklist:["Purchase oversized dog treats",'Practice "roll over" with parking brake',"Encourage fetching of spare tires"],isComplete:!1,note:'Avoid teaching "play dead" while driving.'},{title:"Write Holiday Cards in Hieroglyphics",dueDate:"2023-12-23",priority:"Medium",checklist:["Master ancient Egyptian symbols","Carve messages into stone tablets","Hire carrier pigeons"],isComplete:!1,note:"Friends may need a decoder ring."}].map((t=>new m(t)));const j=[new u({title:"Today",todoList:y,type:"default"}),new u({title:"Important",todoList:f,type:"default"}),new u({title:"Tasks",todoList:C,type:"default"})],g=new class{constructor(){this.components=new Set}register(t){this.components.add(t),t.setMediator(this)}unregister(t){this.components.delete(t),t.setMediator(null)}notify(t,e,i){this.components.forEach((s=>{s!==t&&s.receiveNotification(e,i)}))}},v=new class{constructor(){this.mediator=null,this.projectList=new Set}getProjects(){return this.projectList}addProject(t){this.projectList.add(t)}removeProject(t){this.projectList.delete(t)}setMediator(t){this.mediator=t}receiveNotification(t,e){"addProject"==t&&(this.addProject(new u(e)),this.mediator.notify(this,"projectAdded",null)),"deleteProject"==t&&(this.removeProject(e),this.mediator.notify(this,"projectDeleted",null)),"modifyProject"==t&&(Object.assign(k.currProject,e),this.mediator.notify(this,"projectEdited",null)),"addTask"==t&&(k.currProject.addTodo(new m(e)),this.mediator.notify(this,"taskAdded",null)),"deleteTask"==t&&(k.currProject.removeTodo(e),this.mediator.notify(this,"taskDeleted",null)),"modifyTask"==t&&(Object.assign(k.currTask,e),this.mediator.notify(this,"taskEdited",null)),"modifyChecklist"==t&&(Object.assign(k.currTask,e),this.mediator.notify(this,"checklistEdited",null))}};j.forEach((t=>{v.addProject(t)}));const D=new class{constructor(t){this.mediator=null,this.projectMap=new Map,this.projectList=t,this.sidenavDOM=new i,this.sidenavUI=new s(this)}init(){this.refresh(),this.sidenavUI.loadUI(),this.selectDefaultProject()}loadProjectListData(){this.projectMap.clear();for(let t of this.projectList)this.projectMap.set(this.getUID(),t)}selectDefaultProject(){this.mediator.notify(this,"projectSelected",this.projectMap.values().next().value)}refresh(){this.loadProjectListData(),this.sidenavDOM.renderProjects(this.projectMap),this.mediator.notify(this,"projectsLoaded",this.projectList)}setMediator(t){this.mediator=t}receiveNotification(t,e){"asideOpened"==t&&this.sidenavUI.closeSideNav(),"projectAdded"!=t&&"taskAdded"!=t&&"taskDeleted"!=t&&"projectEdited"!=t||this.refresh(),"projectDeleted"==t&&(this.refresh(),this.selectDefaultProject())}getUID(){return Math.floor(1e9*Math.random()).toString(36)}}(v.getProjects()),S=new class{constructor(){this.currTask=null,this.mediator=null,this.asideUI=new t(this),this.asideDOM=new e}init(){this.asideUI.loadUI()}refresh(){this.asideDOM.renderTaskInfo(this.currTask)}showTaskInfo(){this.refresh(),this.asideUI.openAside()}setCurrTask(t){this.currTask=t}setMediator(t){this.mediator=t}receiveNotification(t,e){"taskSelected"==t&&(this.setCurrTask(e),this.showTaskInfo()),"sidenavOpened"!=t&&"projectSelected"!=t&&"taskDeleted"!=t||this.asideUI.closeAside(),"taskEdited"!=t&&"checklistEdited"!=t||this.refresh()}},P=new class{constructor(){this.currProject=null,this.taskMap=new Map,this.mediator=null,this.mainUI=new o(this),this.mainDOM=new r}init(){this.mainUI.loadUI()}refresh(){this.loadProjectData(),this.mainDOM.renderTasks(this.currProject,this.taskMap)}loadProjectData(){this.taskMap.clear(),this.currProject.todoList.forEach((t=>{this.taskMap.set(this.getUID(),t)}))}getUID(){return Math.floor(1e9*Math.random()).toString(36)}setMediator(t){this.mediator=t}receiveNotification(t,e){"projectSelected"==t&&(this.currProject=e,this.refresh()),"taskAdded"!=t&&"taskDeleted"!=t&&"taskEdited"!=t&&"projectEdited"!=t||this.refresh()}},L=new class{constructor(){this.projectForm=new d(this,n.getProjectData,n.loadProjectData),this.taskForm=new l(this,n.getTodoData,n.loadTodoData),this.checklistForm=new h(this,n.getChecklistData,n.loadChecklistData),this.mediator=null}init(){this.projectForm.setupUI(),this.taskForm.setupUI(),this.checklistForm.setupUI()}setMediator(t){this.mediator=t}receiveNotification(t,e){"editChecklist"==t&&this.checklistForm.showForm(e),"newProject"!=t&&"editProject"!=t||(this.projectForm.submitAction="new","editProject"==t&&(this.projectForm.submitAction="edit"),this.projectForm.showForm(e)),"newTask"!=t&&"editTask"!=t||(this.taskForm.submitAction="new","editTask"==t&&(this.taskForm.submitAction="edit"),this.taskForm.showForm(e))}};g.register(D),g.register(P),g.register(S),g.register(L),g.register(k),g.register(v),D.init(),P.init(),S.init(),L.init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,